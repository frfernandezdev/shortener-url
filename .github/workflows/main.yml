name: CI/CD

on:
  push:
    branches:
      - main
      - dev

jobs:
  tests:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      # This step checks out a copy of your repository.
      - name: Checkout code
        uses: actions/checkout@v3

      # This step sets up Node.js environment.
      - name: Setup Node.js
        uses: actions/setup-node@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
          coverage: none

      # This step installs the npm dependencies
      - name: Install Npm dependencies
        run: npm install

      # This step installs Composer dependencies with the specified options.
      - name: Install Composer dependencies
        uses: "ramsey/composer-install@v2"
        with:
          composer-options: "-n --prefer-dist"

      # This step build assets for website
      - name: Build assets for website
        run: npm run build

      - name: Prepare Laravel Application
        run: |
          cp .env.ci .env
          php artisan key:generate

      - name: Run migration database
        run: php artisan migrate

      - name: Run tests
        run: php artisan test

      - name: Rollback database
        run: migrate:reset

  deploy:
    name: Deploy to AWS Lambda
    runs-on: ubuntu-latest
    needs: [tests]
    if: github.ref == 'refs/heads/main'
    steps:
      # This step checks out a copy of your repository.
      - name: Checkout code
        uses: actions/checkout@v3

      # This step sets up Node.js environment.
      - name: Setup Node.js
        uses: actions/setup-node@v3

      # This step installs the Serverless Framework globally.
      - name: Install Serverless Framework
        run: npm install -g serverless

      # This step sets up PHP environment with the specified version.
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3"

      # This step installs the npm dependencies
      - name: Install Npm dependencies
        run: npm install

      # This step installs Composer dependencies with the specified options.
      - name: Install Composer dependencies
        uses: "ramsey/composer-install@v2"
        with:
          composer-options: "--prefer-dist --optimize-autoloader --no-dev"

      # This step build assets for website
      - name: Build assets for website
        run: npm run build

      # This step deploys your application to AWS Lambda using the Serverless Framework.
      - name: Deploy to AWS Lambda
        uses: serverless/github-action@v3
        with:
          args: deploy --stage=prod
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
